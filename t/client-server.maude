--- Client machine from P client-server example

in "../p-semantics.maude" .

mod DECLS-TEST is
  including P-SEMANTICS .

  --- Define some extra Ids
  ops clientMachine serverMachine helperMachine : -> Stmt .

  --- Main Machine Names
  ops ClientMachine ServerMachine HelperMachine : -> Id .

  --- Events
  ops eRequest eProcessReq eResponse eReqSuccessful eReqFailed : -> Id .

  --- States
  ops Init WaitForRequests StartPumpingRequests : -> Id .

  --- Types
  ops bool requestType responseType ClientMachine ServerMachine : -> Type .

  --- Variables
  ops HelperInterface successful helper id success source nextReqId index payload server lastRecvSuccessfulReqId : -> Id .

  eq clientMachine = (
   machine ClientMachine sends eRequest ;
   { var a : int ;
     var server : ServerMachine ;
     var nextReqId : int ;
     var lastRecvSuccessfulReqId : int ;
     var index : int ;

     start state Init {
       entry
      {
         nextReqId = 1 ;
         server = new ServerMachine( .Exps ) ;
         goto StartPumpingRequests ;
       }
    }

    state StartPumpingRequests {
      entry {
        index = 0 ;
        while(index < 2)
        {
            send server, eRequest, (source = this , id = nextReqId) ;
            nextReqId = nextReqId + 1 ;
            index = index + 1 ;
        }
      }

      on eResponse do (payload : responseType) {
           lastRecvSuccessfulReqId = payload . id ;
      }
    }
  } ) .

  eq serverMachine = (
    machine ServerMachine
    sends eResponse ;
    {
      var successful : bool ;
      start state Init {
        on eRequest do (payload : requestType) {
          successful = true ;
          send payload . source, eResponse, (id = payload . id , success = successful) ;
        }
      }
    } )  .

endm


red clientMachine .
red serverMachine .

rew init(main clientMachine serverMachine) .

--- Checking monotonically increasing responses
search init(main clientMachine serverMachine)
   =>+ (instances:
        ( instance: Nat:Nat
        , (code: .Stmt )
        , (variables:
             lastRecvSuccessfulReqId |-> ( LastId:Int )
             VariableMap:VariableMap )
        , (state: StartPumpingRequests)
        , (mid: ClientMachine)
        , (buffer: { eResponse , (id = ResponseId:Int, Exps:Exps) }, Messages:Messages)
        , IAttrs:InstanceAttributes
        )
        Machines:MachineInstances
       ) C:Configuration
  such that ResponseId:Int <Int (LastId:Int)
.


quit .
